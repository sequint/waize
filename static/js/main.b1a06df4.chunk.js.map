{"version":3,"sources":["components/CapturedPhoto/capturedPhotoSlice.ts","app/store.ts","components/About/About.tsx","components/Camera/Camera.tsx","hooks/useUserMedia.ts","app/hooks.ts","components/HomeTitle/HomeTitle.tsx","images/dashboardWave.jpeg","images/dashboardWaveSmall.png","components/HomeWavePic/HomeWavePic.tsx","components/NavBar/NavBar.tsx","pages/Home.tsx","pages/Waize.tsx","app/App.tsx","index.tsx"],"names":["capturedPhotoSlice","createSlice","name","initialState","open","photoURL","reducers","togglePhotoView","state","updatePhotoURL","url","payload","console","log","actions","store","configureStore","reducer","capturedPhoto","capturedPhotoReducer","aboutSections","icon","title","text","About","className","List","sx","width","maxWidth","bgcolor","map","item","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","videoConstraints","audio","video","facingMode","Camera","videoRef","useRef","mediaStream","requestedMedia","useState","setMediaStream","useEffect","enableStream","a","navigator","mediaDevices","getUserMedia","stream","getTracks","forEach","track","stop","useUserMedia","current","srcObject","ref","onCanPlay","play","autoPlay","playsInline","muted","useSelector","HomeTitle","HomeWavePic","src","wavePic","alt","wavePicSmall","NavBar","props","value","setValue","updateIconClass","definedRoute","Box","BottomNavigation","showLabels","onChange","event","newValue","to","BottomNavigationAction","label","Home","Waize","App","exact","path","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b1a06df4.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n// Define state types for CapturedPhoto\ninterface CapturedPhotoState {\n  open: boolean,\n  photoURL: String\n}\n\n// Initialize state values\nconst initialState: CapturedPhotoState = {\n  open: false,\n  photoURL: ''\n}\n\nexport const capturedPhotoSlice = createSlice({\n  name: 'capturedPhoto',\n  initialState,\n  reducers: {\n    // Slice function to toggle the modal view based on payload\n    togglePhotoView: (state: any) => {\n      state.open = !state.open\n    },\n    updatePhotoURL: (state: any, url: any) => {\n      state.photoURL = url.payload\n      console.log(state.photoURL)\n    },\n  },\n})\n\n// Export the actions for this slice\nexport const { togglePhotoView, updatePhotoURL } = capturedPhotoSlice.actions\n\n// Export state values\nexport const selectPhotoView = (state: any) => state.capturedPhoto.open\nexport const selectPhotoURL = (state: any) => state.capturedPhoto.photoURL\n\n// Export the default slice reducer\nexport default capturedPhotoSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport capturedPhotoReducer from '../components/CapturedPhoto/capturedPhotoSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n    capturedPhoto: capturedPhotoReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n","import List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\nimport ListItemText from '@mui/material/ListItemText'\nimport WavesRoundedIcon from '@mui/icons-material/WavesRounded'\nimport SquareFootRoundedIcon from '@mui/icons-material/SquareFootRounded'\nimport Avatar from '@mui/material/Avatar'\nimport './About.css'\n\nconst aboutSections = [\n  {\n    icon: <WavesRoundedIcon />,\n    title: 'Wave Detection',\n    text: 'Waize uses pixl technology to analyze pictures in real time and detect waves that are forming.'\n  },\n  {\n    icon: <SquareFootRoundedIcon />,\n    title: 'Wave Size',\n    text: 'Using the wave detection technology, Waize will analyze what it deems the face of a wave compared to its surroundings and predict in real time its size.'\n  }\n]\n\nconst About = () => {\n  return (\n    <>\n      <h2 className=\"aboutTitle\">What It Does</h2>\n      <List className=\"aboutList\" sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n        {\n          aboutSections.map(item => (\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar className=\"iconColor\">\n                  {item.icon}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.title} secondary={item.text} />\n            </ListItem>\n          ))\n        }\n      </List>\n    </>\n  )\n}\n\nexport default About\n","import { useRef } from 'react'\nimport { useUserMedia } from '../../hooks'\nimport './Camera.css'\n\n// Set constraints for video stream from user midea data (switch to environment facing after testing)\nconst videoConstraints = {\n  audio: false,\n  video: { facingMode: 'environment' }\n}\n\nconst Camera = () => {\n  // Create a video element using ref\n  const videoRef: any = useRef()\n  const mediaStream = useUserMedia(videoConstraints)\n\n  // If there is a video stream live, a video element set, and no src on the object - then set a src equal to the mediaStream\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream\n  }\n\n  // Plays video stream to handle canPlay prop of video element\n  const handleCanPlay = () => {\n    videoRef.current.play()\n  }\n\n  return (\n    <>\n      <video\n        ref={videoRef}\n        onCanPlay={handleCanPlay}\n        className=\"streamScreen\"\n        autoPlay\n        playsInline\n        muted\n      />\n    </>\n  )\n}\n\nexport default Camera\n","import { useState, useEffect } from 'react'\n\nexport const useUserMedia: any = (requestedMedia: any) => {\n  const [mediaStream, setMediaStream] = useState<any>(null)\n\n  useEffect(() => {\n    const enableStream: any = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(requestedMedia);\n        setMediaStream(stream);\n      }\n      catch (err) { console.log(err) }\n    }\n\n    if (!mediaStream) {\n      enableStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach((track: { stop: () => void }) => {\n          track.stop()\n        })\n      }\n    }\n  }, [mediaStream, requestedMedia])\n\n  return mediaStream\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Specify appDispatch and appSelector to the app\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import './HomeTitle.css'\n\nconst HomeTitle = () => {\n  return (\n    <>\n      <h1 className=\"homeTitle\">Waize</h1>\n    </>\n  )\n}\n\nexport default HomeTitle\n","export default __webpack_public_path__ + \"static/media/dashboardWave.980ac552.jpeg\";","export default __webpack_public_path__ + \"static/media/dashboardWaveSmall.74d48754.png\";","import wavePic from '../../images/dashboardWave.jpeg'\nimport wavePicSmall from '../../images/dashboardWaveSmall.png'\nimport './HomeWavePic.css'\n\nconst HomeWavePic = () => {\n\n  return (\n    <>\n      <img src={wavePic} alt=\"waves with waize generator\" className=\"homeWavePic largePic\" />\n      <img src={wavePicSmall} alt=\"waves with waize generator\" className=\"homeWavePic smallPic\" />\n    </>\n  )\n}\n\nexport default HomeWavePic\n","import { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Box from '@mui/material/Box'\nimport BottomNavigation from '@mui/material/BottomNavigation'\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction'\nimport CottageRounded from '@mui/icons-material/CottageRounded'\nimport WavesRoundedIcon from '@mui/icons-material/WavesRounded'\nimport './NavBar.css'\n\n// Typescript interface to define prop type for the defined route in NavBar\ninterface navbar {\n  definedRoute: String\n}\n\nconst NavBar: React.FC<navbar> = (props) => {\n  const [value, setValue] = useState(0)\n\n  const updateIconClass = (icon: String) => {\n    // Return a class string depending on the icon and definedRoute\n    switch(icon) {\n      case 'home':\n        if (props.definedRoute === 'home') { return 'activeLinkIcon' }\n        else { return 'inactiveLinkIcon' }\n      case 'waize':\n        return props.definedRoute === 'waize' ? 'activeLinkIcon' : 'inactiveLinkIcon'\n      default:\n        return 'inactiveLinkIcon'\n    }\n  }\n\n  return (\n    <Box className=\"navBarHolder\">\n      <BottomNavigation\n        showLabels\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue)\n        }}\n      >\n        <Link to='/'>\n          <BottomNavigationAction className={updateIconClass('home')} label=\"Home\" icon={<CottageRounded />} />\n        </Link>\n        <Link to='/waize'>\n          <BottomNavigationAction className={updateIconClass('waize')} label=\"Waize\" icon={<WavesRoundedIcon />} />\n        </Link>\n        \n      </BottomNavigation>\n    </Box>\n  )\n}\n\nexport default NavBar\n","import {\n  HomeTitle,\n  HomeWavePic,\n  About,\n  NavBar\n} from '../components'\n\nconst Home = () => {\n\n  return (\n    <>\n      <HomeTitle />\n      <HomeWavePic />\n      <About />\n      <NavBar definedRoute='home'/>\n    </>\n  )\n}\n\nexport default Home\n","import {\n  Camera,\n  CapturedPhoto,\n  NavBar\n} from '../components'\n\nconst Waize = () => {\n  return (\n    <>\n      <Camera />\n      {/* <CapturedPhoto /> */}\n      <NavBar definedRoute='waize' />\n    </>\n  )\n}\n\nexport default Waize\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport Home from '../pages/Home'\nimport Waize from '../pages/Waize'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route path='/waize'>\n            <Waize />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { Provider } from 'react-redux'\nimport {store} from './app/store'\nimport App from './app/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline>\n      <Provider store={store}>\n        <App />\n      </Provider>\n      \n    </CssBaseline>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}